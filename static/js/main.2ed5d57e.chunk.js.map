{"version":3,"sources":["utils/index.js","App/speechRecognition.store.js","App/view.store.js","App/App.store.js","App/StoreProvider.js","components/Languages.js","components/VoiceControls.js","components/VoiceOutput.js","App/App.js","serviceWorker.js","index.js"],"names":["langTags","langNames","forEach","lang","push","l","i","supportedLangs","SpeechRecognitionStore","appStore","_this","this","Object","classCallCheck","output","guess","lastGuess","window","localStorage","getItem","console","error","getLang","startRecognition","recognition","start","view","startRecording","stopRecognition","addText","setGuessText","stopRecording","stop","DOMException","setOutput","setGuess","setLang","arguments","length","undefined","setItem","BrowserSpeechRecognition","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","continuous","interimResults","onstart","event","log","onresult","recording","resultIndex","results","isFinal","transcript","onspeechend","onerror","onaudiostart","onaudioend","onend","onnomatch","onsoundstart","onsoundend","onspeechstart","decorate","observable","action","ViewStore","editing","text","guessText","setText","clearText","langSelectDisabled","computed","toggleRecording","configure","enforceActions","AppStore","speechRecognition","StoreProvider","_ref","store","children","react_default","a","createElement","index_module","Languages","_this$props$speechRec","props","style","flex","margin","disabled","onChange","e","target","value","map","key","Component","inject","observer","VoiceControls","_this$props$view","className","onClick","VoiceOutput","handleOnChange","handleOnFocus","select","_this$props$view2","refs","scrollTop","scrollHeight","padding","display","alignItems","height","maxHeight","flexDirection","ref","placeholder","backgroundColor","maxWidth","fontSize","width","onFocus","App","App_StoreProvider","components_Languages","components_VoiceOutput","src_components_VoiceControls","Boolean","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ed5d57e.chunk.js","sourcesContent":["const languages = [\n  ['Afrikaans',       ['af-ZA']],\n  ['Bahasa Indonesia',['id-ID']],\n  ['Bahasa Melayu',   ['ms-MY']],\n  ['Català',          ['ca-ES']],\n  ['Čeština',         ['cs-CZ']],\n  ['Deutsch',         ['de-DE']],\n  ['English',         ['en-AU', 'Australia'],\n                      ['en-CA', 'Canada'],\n                      ['en-IN', 'India'],\n                      ['en-NZ', 'New Zealand'],\n                      ['en-ZA', 'South Africa'],\n                      ['en-GB', 'United Kingdom'],\n                      ['en-US', 'United States']],\n  ['Español',         ['es-AR', 'Argentina'],\n                      ['es-BO', 'Bolivia'],\n                      ['es-CL', 'Chile'],\n                      ['es-CO', 'Colombia'],\n                      ['es-CR', 'Costa Rica'],\n                      ['es-EC', 'Ecuador'],\n                      ['es-SV', 'El Salvador'],\n                      ['es-ES', 'España'],\n                      ['es-US', 'Estados Unidos'],\n                      ['es-GT', 'Guatemala'],\n                      ['es-HN', 'Honduras'],\n                      ['es-MX', 'México'],\n                      ['es-NI', 'Nicaragua'],\n                      ['es-PA', 'Panamá'],\n                      ['es-PY', 'Paraguay'],\n                      ['es-PE', 'Perú'],\n                      ['es-PR', 'Puerto Rico'],\n                      ['es-DO', 'República Dominicana'],\n                      ['es-UY', 'Uruguay'],\n                      ['es-VE', 'Venezuela']],\n  ['Euskara',         ['eu-ES']],\n  ['Français',        ['fr-FR']],\n  ['Galego',          ['gl-ES']],\n  ['Hrvatski',        ['hr_HR']],\n  ['IsiZulu',         ['zu-ZA']],\n  ['Íslenska',        ['is-IS']],\n  ['Italiano',        ['it-IT', 'Italia'],\n                      ['it-CH', 'Svizzera']],\n  ['Magyar',          ['hu-HU']],\n  ['Nederlands',      ['nl-NL']],\n  ['Norsk bokmål',    ['nb-NO']],\n  ['Polski',          ['pl-PL']],\n  ['Português',       ['pt-BR', 'Brasil'],\n                      ['pt-PT', 'Portugal']],\n  ['Română',          ['ro-RO']],\n  ['Slovenčina',      ['sk-SK']],\n  ['Suomi',           ['fi-FI']],\n  ['Svenska',         ['sv-SE']],\n  ['Türkçe',          ['tr-TR']],\n  ['български',       ['bg-BG']],\n  ['Pусский',         ['ru-RU']],\n  ['Српски',          ['sr-RS']],\n  ['한국어',            ['ko-KR']],\n  ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\n                      ['cmn-Hans-HK', '普通话 (香港)'],\n                      ['cmn-Hant-TW', '中文 (台灣)'],\n                      ['yue-Hant-HK', '粵語 (香港)']],\n  ['日本語',           ['ja-JP']],\n  ['Lingua latīna',   ['la']]\n];\n\nconst langTags = [];\nconst langNames = [];\n\nlanguages.forEach((lang) => {\n  langNames.push(lang[0])\n  lang.forEach((l, i) => {\n    if (i > 0) {\n      langTags.push(l[0])\n    }\n  })\n})\n\nexport const supportedLangs = langTags;\n\nexport const getLang = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    return window.localStorage.getItem('lang') || 'de-DE'\n  } else {\n    console.error('localStorage is not supported')\n  }\n};\n\nexport const setLang = (lang = 'de-DE') => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    window.localStorage.setItem('lang', lang)\n  } else {\n    console.error('localStorage is not supported')\n  }\n}\n","import { decorate, observable, action } from 'mobx';\n\nimport { getLang, setLang } from '../utils'\n\nclass SpeechRecognitionStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    const BrowserSpeechRecognition = typeof window !== 'undefined' && (\n      window.SpeechRecognition ||\n      window.webkitSpeechRecognition ||\n      window.mozSpeechRecognition ||\n      window.msSpeechRecognition ||\n      window.oSpeechRecognition\n    );\n\n    if (BrowserSpeechRecognition) {\n      this.recognition = new BrowserSpeechRecognition();\n      this.recognition.continuous = true;\n      this.recognition.interimResults = true;\n      this.recognition.lang = this.lang;\n\n      this.recognition.onstart = (event) => {\n        console.log('SpeechRecognition.onstart');\n      }\n\n      this.recognition.onresult = (event) => {\n        console.log('SpeechRecognition.onresult');\n        if (this.appStore.view.recording) {\n          let guess = '';\n          let output = '';\n          for (let i = event.resultIndex; i < event.results.length; i++) {\n            if (event.results[i].isFinal) {\n              output = event.results[i][0].transcript\n            } else {\n              guess = i > 0\n                ? guess + event.results[i][0].transcript\n                : event.results[i][0].transcript;\n            }\n          }\n          this.setOutput(output);\n          this.setGuess(guess);\n        }\n      }\n\n      this.recognition.onspeechend = () => {\n        console.log('SpeechRecognition.onspeechend');\n      }\n\n      this.recognition.onerror = (event) => {\n        console.log('SpeechRecognition.onerror');\n      }\n\n      this.recognition.onaudiostart = (event) => {\n        console.log('SpeechRecognition.onaudiostart');\n      }\n\n      this.recognition.onaudioend = (event) => {\n        console.log('SpeechRecognition.onaudioend');\n      }\n\n      this.recognition.onend = (event) => {\n        console.log('SpeechRecognition.onend');\n        this.stopRecognition();\n      }\n\n      this.recognition.onnomatch = (event) => {\n        console.log('SpeechRecognition.onnomatch');\n      }\n\n      this.recognition.onsoundstart = (event) => {\n        console.log('SpeechRecognition.onsoundstart');\n      }\n\n      this.recognition.onsoundend = (event) => {\n        console.log('SpeechRecognition.onsoundend');\n      }\n\n      this.recognition.onspeechstart = (event) => {\n        console.log('SpeechRecognition.onspeechstart');\n      }\n    } else {\n      console.error('Speech recognition not supported');\n    }\n  }\n\n  // OBSERVABLES................................................................\n  output = '';\n  guess = '';\n  lastGuess = '';\n  lang = getLang();\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  startRecognition = () => {\n    this.output = '';\n    this.guess = '';\n    this.lastGuess = '';\n    this.recognition.start();\n    this.appStore.view.startRecording();\n  }\n  stopRecognition = () => {\n    if (this.guess) {\n      this.appStore.view.addText(this.guess + ' ');\n    }\n    this.appStore.view.setGuessText('');\n    this.output = '';\n    this.guess = '';\n    this.appStore.view.stopRecording();\n\n    try {\n      this.recognition.stop()\n    } catch (DOMException) {\n      // ...\n    }\n  }\n  setOutput = (output) => {\n    this.output = output;\n    this.guess = '';\n    this.appStore.view.addText(output);\n  }\n  setGuess = (guess) => {\n    this.guess = guess;\n    this.appStore.view.setGuessText(this.guess);\n  }\n  setLang = (lang) => {\n    setLang(lang);\n    this.lang = lang;\n    if (this.recognition) {\n      this.recognition.lang = lang;\n    }\n  }\n}\n\ndecorate(SpeechRecognitionStore, {\n  output: observable,\n  guess: observable,\n  lang: observable,\n  startRecognition: action,\n  stopRecognition: action,\n  setOutput: action,\n  setGuess: action,\n  setLang: action,\n});\n\nexport default SpeechRecognitionStore;\n","import { decorate, observable, action, computed } from 'mobx';\n\nclass ViewStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n  // OBSERVABLES................................................................\n  recording = false;\n  editing = false;\n  text = '';\n  guessText = '';\n\n  // COMPUTEDS..................................................................\n  get langSelectDisabled() {\n    return this.recording;\n  }\n\n  // ACTIONS....................................................................\n  startRecording = () => {\n    this.recording = true;\n  }\n  stopRecording = () => {\n    this.recording = false;\n  }\n  setText = (text) => {\n    this.text = text;\n  }\n  clearText = () => {\n    this.text = '';\n  }\n  addText = (text) => {\n    this.text = this.text + text;\n  }\n  setGuessText = (text) => {\n    this.guessText = text || '...';\n  }\n}\n\ndecorate(ViewStore, {\n  recording: observable,\n  editing: observable,\n  text: observable,\n  guessText: observable,\n  langSelectDisabled: computed,\n  toggleRecording: action,\n  setText: action,\n  clearText: action,\n  setGuessText: action,\n});\n\nexport default ViewStore;\n","import { configure } from 'mobx';\n\nimport SpeechRecognitionStore from './speechRecognition.store.js'\nimport ViewStore from './view.store.js'\n\nconfigure({ enforceActions: 'observed' });\n\nexport default class AppStore {\n  constructor() {\n    this.speechRecognition = new SpeechRecognitionStore(this);\n    this.view = new ViewStore(this);\n  }\n}\n","import React from 'react';\nimport { Provider as MobxProvider } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n// this component dictates which stores can be injected into app components\nconst StoreProvider = ({ store, children }) => (\n  <MobxProvider\n    view={store.view}\n    speechRecognition={store.speechRecognition}\n  >\n    {children}\n  </MobxProvider>\n);\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { supportedLangs } from '../utils';\n\nclass Languages extends Component {\n  render() {\n    const { lang, setLang } = this.props.speechRecognition\n    const { langSelectDisabled } = this.props.view\n    return (\n      <div style={{ flex: '0 0 auto'}}>\n        <select\n          style={{ margin: '3px' }}\n          disabled={ langSelectDisabled }\n          onChange={ (e) => setLang(e.target.value) }\n          value={ lang }\n        >\n        {\n          supportedLangs.map((lang) => (\n            <option key={ lang } value={ lang }>{ lang }</option>\n          ))\n        }\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default inject('view', 'speechRecognition')(observer(Languages));\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport './VoiceControls.css';\n\nclass VoiceControls extends Component {\n  render() {\n    const { recording, clearText, text } = this.props.view;\n    const { startRecognition, stopRecognition } = this.props.speechRecognition;\n    return (\n      <div style={{ flex: '0 0 auto' }}>\n        {recording && (\n          <span className='circle' />\n        )}\n        <button\n          className='button'\n          disabled={ recording }\n          onClick={ startRecognition }>Start</button>\n        <button\n          className='button'\n          disabled={ !recording }\n          onClick={ stopRecognition }>Stop</button>\n        <button\n          className='button'\n          disabled={ !text }\n          onClick={ clearText }>Clear</button>\n      </div>\n    );\n  }\n}\n\nexport default inject('view', 'speechRecognition')(observer(VoiceControls));\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nclass VoiceOutput extends Component {\n  render() {\n    const { text, guessText } = this.props.view\n    if (this.refs.guess) {\n      this.refs.guess.scrollTop = this.refs.guess.scrollHeight;\n    }\n    if (this.refs.output) {\n      this.refs.output.scrollTop = this.refs.output.scrollHeight;\n    }\n    return (\n      <div style={{ padding: '0 20px', flex: '1 1 auto', display: 'flex', alignItems: 'center', height: '100%', maxHeight: '500px', flexDirection: 'column' }}>\n        <textarea\n          ref='guess'\n          disabled\n          placeholder='guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation'\n          style={{ backgroundColor: 'papayawhip', maxWidth: '700px', fontSize: '24px', width: '100%', flex: '1 1 30%', padding: '7px' }}\n          value={ guessText }\n          onChange={ () => false } />\n        <textarea\n          ref='output'\n          style={{ backgroundColor: 'whitesmoke', maxWidth: '700px', fontSize: '24px', width: '100%', flex: '1 1 70%', padding: '7px' }}\n          value={ text }\n          onChange={ this.handleOnChange }\n          onFocus={ this.handleOnFocus } />\n      </div>\n    );\n  }\n  handleOnChange = (e) => {\n    const { recording, setText } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      setText(e.target.value);\n    }\n\n  }\n  handleOnFocus = (e) => {\n    const { recording } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      e.target.select()\n    }\n  }\n}\n\nexport default inject('view', 'speechRecognition')(observer(VoiceOutput));;\n","import React from 'react';\nimport DevTools from 'mobx-react-devtools';\nimport './App.css';\n\nimport AppStore from './App.store'\nimport StoreProvider from './StoreProvider'\nimport Languages from '../components/Languages'\nimport VoiceControls from '../components/VoiceControls'\nimport VoiceOutput from '../components/VoiceOutput'\n\nconst App = () => (\n  <StoreProvider store={ new AppStore() }>\n    <div className=\"App\">\n      <Languages />\n      <VoiceOutput />\n      <VoiceControls />\n    </div>\n  </StoreProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}