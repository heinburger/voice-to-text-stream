{"version":3,"sources":["components/StoreProvider.js","components/Theme/ThemeProvider.js","components/Toolbar/Title.js","components/Toolbar/ToggleDrawerButton.js","components/Toolbar/ToggleLightThemeButton.js","components/Icons/Github.js","utils/browser.js","components/Toolbar/GithubLinkButton.js","components/Toolbar/MicButton.js","components/Toolbar/Toolbar.js","components/Menu/Header.js","utils/language.js","components/Menu/SelectLang.js","components/Menu/_StyledCaption.js","components/Menu/OnlineStatus.js","components/Menu/LocalStorageSupport.js","components/Menu/PermissionsSupport.js","components/Menu/SpeechRecognitionSupport.js","components/Menu/AudioSupport.js","components/Menu/AudioPermission.js","components/Menu/SelectAudio.js","components/Menu/Settings.js","components/Menu/Menu.js","components/Layout/Wrapper.js","components/Layout/Drawer.js","components/Layout/TempDrawer.js","components/Layout/DrawerSwitcher.js","components/Layout/Bar.js","components/Layout/Content.js","components/Body/NotSupported.js","components/Body/VoiceOutput.js","components/Body/VoiceControls.js","components/Body/Body.js","components/App.js","stores/ViewStore.js","stores/SpeechRecognitionStore.js","stores/RouterStore.js","stores/TranslateStore.js","stores/SettingsStore.js","stores/AppStore.js","serviceWorker.js","index.js"],"names":["StoreProvider","_ref","store","children","react_default","a","createElement","index_module","view","router","translate","settings","speechRecognition","inject","observer","core_styles","theme","createMuiTheme","drawerWidth","typography","useNextVariants","bodyColor","dark","grey","light","palette","primary","teal","type","lightThemeActive","withStyles","title","Object","assign","mixins","gutters","flex","classes","Typography_default","className","variant","color","noWrap","IconButton_default","aria-label","onClick","toggleTempDrawer","Settings_default","toggleLightTheme","LightbulbOutline_default","Github","SvgIcon_default","d","logError","e","console","error","getScreenWidth","window","innerWidth","getScreenHeight","innerHeight","checkIfOnline","navigator","onLine","speechRecognitionSupported","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","localStorageSupported","localStorage","permissionsSupported","permissions","getAudioPermission","_getAudioPermission","apply","this","arguments","_callee","permissionStatus","regenerator_default","wrap","_context","prev","next","query","name","sent","abrupt","t0","stop","requestAudioPermission","_requestAudioPermission","_callee2","mediaStream","tracks","_context2","mediaDevices","getUserMedia","audio","getAudioTracks","length","_callee3","userPromptPermission","_context3","state","_callee4","listener","_args4","_context4","undefined","onchange","audioSupported","_callee5","devices","_context5","enumerateDevices","filter","kind","deviceId","GithubLinkButton","url","open","Icons_Github","MicButton","_this","buttonRef","button","props","stopRecognition","Mic_default","Component","Fragment","showTempDrawer","Toolbar_ToggleDrawerButton","recording","Toolbar_MicButton","Toolbar_Title","isOnline","concat","getText","Toolbar_ToggleLightThemeButton","Toolbar_GithubLinkButton","styles","wrapper","toolbar","display","drawerHeader","alignItems","overflow","h6","cursor","&:hover","secondary","textDecoration","StyledWrapper","role","style","fontSize","paddingRight","StyledH6","_ref2","rest","objectWithoutProperties","_ref3","goTo","langs","forEach","lang","l","i","push","tag","supportedLangs","StyledFormControl","formControl","width","marginTop","spacing","unit","FormControl_default","SelectLang","_handleChange","setLanguage","target","value","_this$props","InputLabel_default","htmlFor","Select_default","language","onChange","inputProps","id","map","MenuItem_default","key","React","StyledCaption","caption","paddingTop","text","OnlineStatus","_StyledCaption","LocalStorageSupport","SpeechRecognitionSupport","AudioSupport","AudioPermission","audioPermission","Button_default","SelectAudio","setAudioSource","SelectAudio_StyledFormControl","audioSource","audioDevices","device","label","Menu_OnlineStatus","Menu_LocalStorageSupport","PermissionsSupport","Menu_SpeechRecognitionSupport","Menu_SelectLang","Menu_AudioSupport","Menu_AudioPermission","Menu_SelectAudio","Menu","Menu_Header","Divider_default","Menu_Settings","flexGrow","zIndex","height","position","Wrapper_StyledWrapper","react_event_listener_cjs_default","onResize","onScreenResize","drawerPaper","Drawer_default","anchor","paper","StyledMuiDrawer","ModalProps","keepMounted","tempDrawerOpen","onClose","Layout_TempDrawer","Layout_Drawer","appBar","defineProperty","right","left","breakpoints","up","AppBar_default","Toolbar_default","main","backgroundColor","background","default","flexDirection","content","StyledMessage","padding","textAlign","card","message","Card_default","MicOff_default","verticalAlign","StyledTextField","textField","TextField_default","InputLabelProps","shrink","VoiceOutput","handleOnChange","_this$props$view","setText","handleOnFocus","select","_this2","_this$props$view2","guessText","inputRowsGuess","inputRowsOutput","guess","scrollTop","scrollHeight","output","flexWrap","inputRef","rows","disabled","placeholder","multiline","onFocus","fab","margin","container","bottom","StyledFab","Fab_default","StyledFabContainer","clearText","screenWidth","startRecognition","size","Cancel_default","Delete_default","Body_VoiceOutput","Body_VoiceControls","Body_NotSupported","App","components_StoreProvider","mobx_react_devtools_default","Theme_ThemeProvider","Layout_Wrapper","Layout_Bar","components_Toolbar_Toolbar","Layout_DrawerSwitcher","components_Menu_Menu","Layout_Content","components_Body_Body","ViewStore","appStore","classCallCheck","screenHeight","closeTempDrawer","addText","setGuessText","startRecording","stopRecording","decorate","observable","computed","action","SpeechRecognitionStore","initRecognition","BrowserSpeechRecognition","recognition","continuous","interimResults","onstart","event","log","onresult","resultIndex","results","isFinal","transcript","setOutput","setGuess","onspeechend","onerror","onaudiostart","onaudioend","onend","onnomatch","onsoundstart","onsoundend","onspeechstart","lastGuess","start","DOMException","autorun","RouterStore","pathname","route","history","setPathname","createHistory","basename","process","location","listen","TranslateStore","translations","Voice to text","de-DE","Language","Online status","localStorage support","Permissions support","Speech recognition support","Audio support","Audio permission","Audio source","Default","Unknown","Request","Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation","Guess","Output","Speech recognition is not supported by your device. Currently only desktop Chrome and android Chrome support this technology.","SettingsStore","getItem","getLocalStorageByKey","setOnlineStatus","status","setItem","setLocalStorageByKey","setAudioDevices","setAudioPermission","permission","updateAudioDevices","wrappedListener","addEventListener","setOnlineListener","then","updateAudioPermission","_checkAudioPermission","checkAudioPermission","_setAudioPermissionListener","setAudioPermissionListener","_getAudioDevices","getAudioDevices","ondevicechange","setAudioDeviceListener","configure","enforceActions","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","components_App","AppStore","document","getElementById","URL","href","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8f5903f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider as MobxProvider } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n// this component dictates which stores can be injected into app components\nconst StoreProvider = ({ store, children }) => (\n  <MobxProvider\n    view={store.view}\n    router={store.router}\n    translate={store.translate}\n    settings={store.settings}\n    speechRecognition={store.speechRecognition}\n  >\n    {children}\n  </MobxProvider>\n);\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n// import amber from '@material-ui/core/colors/amber';\nimport teal from '@material-ui/core/colors/teal';\nimport grey from '@material-ui/core/colors/grey';\n\nconst ThemeProvider = ({ view, children }) => (\n  <MuiThemeProvider theme={createMuiTheme({\n    drawerWidth: 260,\n    typography: {\n      useNextVariants: true,\n    },\n    bodyColor: {\n      dark: grey['A400'],\n      light: grey[50],\n    },\n    palette: {\n      primary: teal,\n      type: view.lightThemeActive ? 'light' : 'dark',\n    },\n  })}>\n    {children}\n  </MuiThemeProvider>\n);\n\nThemeProvider.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default inject('view')(observer(ThemeProvider));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  title: Object.assign({}, theme.mixins.gutters(), {\n    flex: '1 1 auto',\n  }),\n});\n\nconst Title = ({ classes, title }) => (\n  <Typography\n    className={classes.title}\n    variant='h6'\n    color='inherit'\n    noWrap\n  >\n    {title}\n  </Typography>\n);\n\nTitle.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport { inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst ToggleDrawerButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='open drawer'\n    onClick={() => view.toggleTempDrawer()}\n  >\n    <SettingsIcon />\n  </IconButton>\n);\n\nToggleDrawerButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleDrawerButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LightbulbOutline from '@material-ui/icons/LightbulbOutline';\n\nconst ToggleLightThemeButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='toggle light theme'\n    onClick={() => view.toggleLightTheme()}\n  >\n    <LightbulbOutline />\n  </IconButton>\n);\n\nToggleLightThemeButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleLightThemeButton);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Github = () => (\n  <SvgIcon>\n    <path d='M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3' />\n  </SvgIcon>\n);\n\nexport default Github;\n","const logError = (e) => {\n  // make this better:\n  if (process.env.NODE_ENV !== 'test') {\n    console.error(e)\n  }\n}\n\nexport const getScreenWidth = () => {\n  return window.innerWidth;\n};\n\nexport const getScreenHeight = () => {\n  return window.innerHeight;\n};\n\nexport const setBodyColor = (color) => {\n  document.body.style.background = color;\n};\n\nexport const navigateTo = (url) => {\n  window.open(url);\n};\n\nexport const checkIfOnline = () => {\n  return window.navigator.onLine\n}\n\nexport const setOnlineListener = (listener = () => false) => {\n  const wrappedListener = () => listener(checkIfOnline());\n  window.addEventListener('offline', wrappedListener);\n  window.addEventListener('online', wrappedListener);\n}\n\nexport const speechRecognitionSupported = typeof window !== 'undefined' &&\n                                          !!(window.SpeechRecognition ||\n                                             window.webkitSpeechRecognition ||\n                                             window.mozSpeechRecognition ||\n                                             window.msSpeechRecognition ||\n                                             window.oSpeechRecognition);\n\n\nexport const getBrowserSpeechRecognition = () => {\n  if (speechRecognitionSupported) {\n    return window.SpeechRecognition ||\n           window.webkitSpeechRecognition ||\n           window.mozSpeechRecognition ||\n           window.msSpeechRecognition ||\n           window.oSpeechRecognition;\n  } else {\n    return null;\n  }\n}\n\nexport const localStorageSupported = typeof window !== 'undefined' &&\n                                     !!window.localStorage;\n\nexport const getLocalStorageByKey = (key) => {\n  let value;\n  try {\n    value = window.localStorage.getItem(key);\n  } catch (e) {\n    logError(e)\n    return null;\n  }\n  return value;\n};\n\nexport const setLocalStorageByKey = (key, value) => {\n  try {\n    window.localStorage.setItem(key, value);\n  } catch (e) {\n    logError(e)\n    return false;\n  }\n  return true;\n}\n\nexport const permissionsSupported = typeof window !== 'undefined' &&\n                                   typeof window.navigator !== 'undefined' &&\n                                   !!window.navigator.permissions;\n\nexport async function getAudioPermission() {\n  try {\n    let permissionStatus = await window.navigator.permissions.query({ name: 'microphone' });\n    return permissionStatus;\n  } catch (e) {\n    logError(e);\n    return {};\n  }\n}\n\nexport async function requestAudioPermission() {\n  try {\n    let mediaStream = await window.navigator.mediaDevices.getUserMedia({ audio: true })\n    const tracks = mediaStream.getAudioTracks();\n    if (tracks.length) {\n      tracks[0].stop();\n    }\n    return true;\n  } catch (e) {\n    logError(e);\n    return false;\n  }\n}\n\nexport async function checkAudioPermission() {\n  if (permissionsSupported) {\n    let permissionStatus = await getAudioPermission();\n    return permissionStatus.state === 'granted';\n  } else {\n    let userPromptPermission = await requestAudioPermission();\n    return userPromptPermission;\n  }\n}\n\nexport async function setAudioPermissionListener(listener = () => false) {\n  try {\n    let permissionStatus = await window.navigator.permissions.query({ name: 'microphone' })\n    permissionStatus.onchange = listener;\n    return true\n  } catch (e) {\n    logError(e);\n    return false;\n  }\n}\n\nexport const audioSupported = typeof window !== 'undefined' &&\n                              typeof window.navigator !== 'undefined' &&\n                              !!window.navigator.mediaDevices;\n\nexport async function getAudioDevices() {\n  try {\n    let devices = await window.navigator.mediaDevices.enumerateDevices();\n    return devices.filter((d) => d.kind === 'audioinput' && d.deviceId !== 'default');\n  } catch (e) {\n    logError(e);\n    return [];\n  }\n}\n\nexport const setAudioDeviceListener = (listener = () => false) => {\n  try {\n    window.navigator.mediaDevices.ondevicechange = listener\n    return true\n  } catch (e) {\n    logError(e);\n    return false;\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Github from '../Icons/Github';\nimport { navigateTo } from '../../utils/browser'\n\nconst GithubLinkButton = () => (\n  <IconButton\n    color='inherit'\n    aria-label='go to github'\n    onClick={() => navigateTo('https://github.com/heinburger/voice-to-text-stream')}\n  >\n    <Github />\n  </IconButton>\n);\n\nexport default GithubLinkButton;\n","import React, { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Mic from '@material-ui/icons/Mic';\n\nclass MicButton extends Component {\n  componentDidMount() {\n    // console.log(this.button)\n  }\n  render() {\n    return (\n        <IconButton\n          buttonRef={(button) => this.button = button}\n          color='inherit'\n          aria-label='recording'\n          onClick={this.props.speechRecognition.stopRecognition}\n        >\n          <Mic />\n        </IconButton>\n    );\n  }\n}\n\nexport default inject('speechRecognition')(MicButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport Title from './Title';\nimport ToggleDrawerButton from './ToggleDrawerButton';\nimport ToggleLightThemeButton from './ToggleLightThemeButton';\nimport GithubLinkButton from './GithubLinkButton';\nimport MicButton from './MicButton';\n\nconst Toolbar = ({ view, translate, settings }) => (\n  <>\n    {view.showTempDrawer\n      ? <ToggleDrawerButton />\n      : <React.Fragment />}\n    {view.recording && <MicButton />}\n    <Title title={settings.isOnline ? '' : `(${translate.getText('Offline')})`} />\n    <ToggleLightThemeButton />\n    <GithubLinkButton />\n  </>\n);\n\nToolbar.propTypes = {\n  view: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n};\n\nexport default inject('view', 'translate', 'settings')(observer(Toolbar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  wrapper: Object.assign({}, theme.mixins.toolbar, {\n    display: 'flex',\n  }),\n  drawerHeader: Object.assign({}, theme.mixins.gutters(), {\n    display: 'flex',\n    alignItems: 'center',\n    overflow: 'hidden',\n  }),\n  h6: {\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.palette.secondary[theme.palette.type],\n      textDecoration: 'underline'\n    }\n  },\n});\n\nconst StyledWrapper = withStyles(styles)(({ classes, children }) => (\n  <div className={classes.wrapper}>\n    <div className={classes.drawerHeader}>\n      <span role='img' aria-label='robot' style={{ fontSize: '24px', paddingRight: '5px' }}>🤖</span>\n      {children}\n    </div>\n  </div>\n));\n\nconst StyledH6 = withStyles(styles)(({ classes, ...rest }) => (\n  <Typography\n    variant='h6'\n    className={classes.h6}\n    noWrap\n    {...rest}\n  />\n));\n\nconst Header = ({ router, translate }) => (\n  <StyledWrapper>\n    <StyledH6 onClick={() => router.goTo('/')}>\n      {`${translate.getText('Voice to text')}`}\n    </StyledH6>\n  </StyledWrapper>\n);\n\nHeader.propTypes = {\n  router: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('router', 'translate')(observer(Header));\n","const languages = [\n  ['Afrikaans',       ['af-ZA']],\n  ['Bahasa Indonesia',['id-ID']],\n  ['Bahasa Melayu',   ['ms-MY']],\n  ['Català',          ['ca-ES']],\n  ['Čeština',         ['cs-CZ']],\n  ['Deutsch',         ['de-DE']],\n  ['English',         ['en-AU', 'Australia'],\n                      ['en-CA', 'Canada'],\n                      ['en-IN', 'India'],\n                      ['en-NZ', 'New Zealand'],\n                      ['en-ZA', 'South Africa'],\n                      ['en-GB', 'United Kingdom'],\n                      ['en-US', 'United States']],\n  ['Español',         ['es-AR', 'Argentina'],\n                      ['es-BO', 'Bolivia'],\n                      ['es-CL', 'Chile'],\n                      ['es-CO', 'Colombia'],\n                      ['es-CR', 'Costa Rica'],\n                      ['es-EC', 'Ecuador'],\n                      ['es-SV', 'El Salvador'],\n                      ['es-ES', 'España'],\n                      ['es-US', 'Estados Unidos'],\n                      ['es-GT', 'Guatemala'],\n                      ['es-HN', 'Honduras'],\n                      ['es-MX', 'México'],\n                      ['es-NI', 'Nicaragua'],\n                      ['es-PA', 'Panamá'],\n                      ['es-PY', 'Paraguay'],\n                      ['es-PE', 'Perú'],\n                      ['es-PR', 'Puerto Rico'],\n                      ['es-DO', 'República Dominicana'],\n                      ['es-UY', 'Uruguay'],\n                      ['es-VE', 'Venezuela']],\n  ['Euskara',         ['eu-ES']],\n  ['Français',        ['fr-FR']],\n  ['Galego',          ['gl-ES']],\n  ['Hrvatski',        ['hr_HR']],\n  ['IsiZulu',         ['zu-ZA']],\n  ['Íslenska',        ['is-IS']],\n  ['Italiano',        ['it-IT', 'Italia'],\n                      ['it-CH', 'Svizzera']],\n  ['Magyar',          ['hu-HU']],\n  ['Nederlands',      ['nl-NL']],\n  ['Norsk bokmål',    ['nb-NO']],\n  ['Polski',          ['pl-PL']],\n  ['Português',       ['pt-BR', 'Brasil'],\n                      ['pt-PT', 'Portugal']],\n  ['Română',          ['ro-RO']],\n  ['Slovenčina',      ['sk-SK']],\n  ['Suomi',           ['fi-FI']],\n  ['Svenska',         ['sv-SE']],\n  ['Türkçe',          ['tr-TR']],\n  ['български',       ['bg-BG']],\n  ['Pусский',         ['ru-RU']],\n  ['Српски',          ['sr-RS']],\n  ['한국어',            ['ko-KR']],\n  ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\n                      ['cmn-Hans-HK', '普通话 (香港)'],\n                      ['cmn-Hant-TW', '中文 (台灣)'],\n                      ['yue-Hant-HK', '粵語 (香港)']],\n  ['日本語',           ['ja-JP']],\n  ['Lingua latīna',   ['la']]\n];\n\nconst langs = [];\n\nlanguages.forEach((lang) => {\n  lang.forEach((l, i) => {\n    if (i > 0) {\n      langs.push({\n        name: l[1] ? `${lang[0]} (${l[1]})` : lang[0],\n        tag: l[0]\n      })\n    }\n  })\n})\n\nexport const supportedLangs = langs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { supportedLangs } from '../../utils/language'\n\nconst styles = theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: `${theme.spacing.unit}px`,\n  },\n});\n\nconst StyledFormControl = withStyles(styles)(({ classes, ...rest }) => (\n  <FormControl className={classes.formControl} {...rest} />\n));\n\nclass SelectLang extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledFormControl>\n        <InputLabel htmlFor=\"language-simple\">{translate.getText('Language')}</InputLabel>\n        <Select\n          value={settings.language}\n          onChange={this._handleChange}\n          inputProps={{\n            name: 'language',\n            id: 'language-simple',\n          }}\n        >\n          {\n            supportedLangs.map(({name, tag}) => (\n              <MenuItem key={ tag } value={ tag }>{ name }</MenuItem>\n            ))\n          }\n        </Select>\n      </StyledFormControl>\n    );\n  }\n  _handleChange = e => {\n    const { settings } = this.props\n    settings.setLanguage(e.target.value);\n  };\n}\n\nSelectLang.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SelectLang));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  caption: {\n    paddingTop: `${theme.spacing.unit}px`,\n    color: theme.palette.text.secondary,\n  },\n});\n\nconst StyledCaption = withStyles(styles)(({ classes, ...rest }) => (\n  <Typography\n    variant='caption'\n    className={classes.caption}\n    noWrap\n    {...rest}\n  />\n));\n\nexport default StyledCaption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass OnlineStatus extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Online status')}\n        {settings.isOnline ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nOnlineStatus.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(OnlineStatus));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport StyledCaption from './_StyledCaption';\n\nclass LocalStorageSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('localStorage support')}\n        {settings.localStorageSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nLocalStorageSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(LocalStorageSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport StyledCaption from './_StyledCaption';\n\nclass LocalStorageSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Permissions support')}\n        {settings.permissionsSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nLocalStorageSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(LocalStorageSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass SpeechRecognitionSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Speech recognition support')}\n        {settings.speechRecognitionSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nSpeechRecognitionSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SpeechRecognitionSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass AudioSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Audio support')}\n        {settings.audioSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nAudioSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(AudioSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport Button from '@material-ui/core/Button';\n\nimport StyledCaption from './_StyledCaption';\n\nclass AudioPermission extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <div>\n        <StyledCaption>\n          {translate.getText('Audio permission')}\n          {settings.audioPermission ? ' 👍' : ' 👎'}\n        </StyledCaption>\n        {!settings.audioPermission && (\n          <Button variant='contained' onClick={ settings.requestAudioPermission }>\n            {translate.getText('Request')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nAudioPermission.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(AudioPermission));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: `${theme.spacing.unit}px`,\n  },\n});\n\nconst StyledFormControl = withStyles(styles)(({ classes, ...rest }) => (\n  <FormControl className={classes.formControl} {...rest} />\n));\n\nclass SelectAudio extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledFormControl>\n        <InputLabel htmlFor=\"audio-simple\">{ translate.getText('Audio source') }</InputLabel>\n        <Select\n          value={settings.audioSource}\n          onChange={this._handleChange}\n          inputProps={{\n            name: 'audio',\n            id: 'audio-simple',\n          }}\n        >\n          <MenuItem key='default' value='default'>{ translate.getText('Default') }</MenuItem>\n          {\n            settings.audioDevices.map((device) => (\n              <MenuItem key={ device.deviceId } value={ device.deviceId }>{ device.label || translate.getText('Unknown') }</MenuItem>\n            ))\n          }\n        </Select>\n      </StyledFormControl>\n    );\n  }\n  _handleChange = e => {\n    const { settings } = this.props\n    settings.setAudioSource(e.target.value);\n  };\n}\n\nSelectAudio.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SelectAudio));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport SelectLang from './SelectLang';\nimport OnlineStatus from './OnlineStatus';\nimport LocalStorageSupport from './LocalStorageSupport';\nimport PermissionsSupport from './PermissionsSupport';\nimport SpeechRecognitionSupport from './SpeechRecognitionSupport';\nimport AudioSupport from './AudioSupport';\nimport AudioPermission from './AudioPermission';\nimport SelectAudio from './SelectAudio';\n\nconst styles = theme => ({\n  wrapper: theme.mixins.gutters(),\n});\n\nconst Settings = ({ classes }) => (\n  <div className={classes.wrapper}>\n    <OnlineStatus />\n    <LocalStorageSupport />\n    <PermissionsSupport />\n    <SpeechRecognitionSupport />\n    <SelectLang />\n    <AudioSupport />\n    <AudioPermission />\n    <SelectAudio />\n  </div>\n);\n\nSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Settings);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Header from './Header';\nimport Settings from './Settings';\n\nconst Menu = () => (\n  <>\n    <Header />\n    <Divider />\n    <Settings />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventListener from 'react-event-listener';\n\nconst styles = theme => ({\n  wrapper: {\n    flexGrow: 1,\n    zIndex: 1,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n});\n\nconst StyledWrapper = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.wrapper} {...rest} />\n));\n\nconst Wrapper = ({ children, view }) => (\n  <StyledWrapper>\n    {children}\n    <EventListener target='window' onResize={view.onScreenResize} />\n  </StyledWrapper>\n);\n\nWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n    position: 'relative',\n  },\n});\n\nconst Drawer = ({ classes, children }) => (\n  <MuiDrawer\n    variant='permanent'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n  >\n    {children}\n  </MuiDrawer>\n)\n\nDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default withStyles(styles)(Drawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n  },\n});\n\nconst StyledMuiDrawer = withStyles(styles)(({ classes, ...rest }) => (\n  <MuiDrawer\n    variant='temporary'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n    ModalProps={{\n      keepMounted: true, // Better open performance on mobile.\n    }}\n    {...rest}\n  />\n));\n\nconst TempDrawer = ({ view, children }) => (\n  <StyledMuiDrawer\n    open={view.tempDrawerOpen}\n    onClose={view.toggleTempDrawer}\n  >\n    {children}\n  </StyledMuiDrawer>\n)\n\nTempDrawer.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(TempDrawer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport Drawer from './Drawer';\nimport TempDrawer from './TempDrawer';\n\nconst DrawerSwitcher = ({ view, children }) => view.showTempDrawer\n  ? <TempDrawer>{children}</TempDrawer>\n  : <Drawer>{children}</Drawer>;\n\nDrawerSwitcher.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(DrawerSwitcher));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nconst styles = theme => ({\n  appBar: {\n    right: 0,\n    left: 'auto',\n    position: 'absolute',\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.drawerWidth}px)`,\n    },\n  },\n});\n\nconst Bar = ({ classes, children }) => (\n  <MuiAppBar className={classes.appBar}>\n    <MuiToolbar>\n      {children}\n    </MuiToolbar>\n  </MuiAppBar>\n);\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default withStyles(styles)(Bar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  toolbar: Object.assign({}, theme.mixins.toolbar, {\n    flex: '0 0 auto',\n  }),\n  main: {\n    backgroundColor: theme.palette.background.default,\n    flex: '1 1 auto',\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n})\n\nconst Content = ({ classes, children }) => (\n  <main className={classes.main}>\n    <div className={classes.toolbar} />\n    <div className={classes.content}>\n      {children}\n    </div>\n  </main>\n)\n\nContent.propTypes = {\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { observer, inject } from 'mobx-react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport MicOff from '@material-ui/icons/MicOff';\n\nconst styles = theme => ({\n  wrapper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  card: {\n    padding: theme.spacing.unit * 4,\n  },\n  message: Object.assign({}, theme.mixins.gutters(), {\n    color: theme.palette.text.secondary,\n  }),\n});\n\nconst StyledMessage = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.wrapper}>\n    <Card className={classes.card}>\n      <Typography variant='h2'><span role='img' aria-label='robot'>🤬</span></Typography>\n      <Typography\n        variant='h5'\n        className={classes.message}\n        {...rest}\n      />\n    </Card>\n  </div>\n));\n\nconst NotSupported = ({ translate }) => (\n  <StyledMessage>\n    <MicOff style={{ verticalAlign: 'middle' }}/>\n    {` ${translate.getText('Speech recognition is not supported by your device. Currently only desktop Chrome and android Chrome support this technology.')}`}\n  </StyledMessage>\n);\n\nNotSupported.propTypes = {\n  translate: PropTypes.object.isRequired,\n};\n\nexport default inject('translate')(observer(NotSupported));\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  textField: {\n    flex: '1 1 250px',\n  },\n});\n\nconst StyledTextField = withStyles(styles)(({ classes, ...rest }) => (\n  <TextField\n    InputLabelProps={{\n      shrink: true,\n    }}\n    className={classes.textField}\n    {...rest}\n  />\n));\n\nclass VoiceOutput extends Component {\n  render() {\n    const { text, guessText, inputRowsGuess, inputRowsOutput } = this.props.view;\n    const { translate } = this.props;\n    if (this.guess) {\n      this.guess.scrollTop = this.guess.scrollHeight;\n    }\n    if (this.output) {\n      this.output.scrollTop = this.output.scrollHeight;\n    }\n    return (\n      <div style={{ flex: '0 0 auto', display: 'flex', flexWrap: 'wrap' }}>\n        <StyledTextField\n          variant='filled'\n          inputRef={(guess) => this.guess = guess}\n          rows={inputRowsGuess}\n          disabled\n          placeholder={translate.getText('Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation')}\n          label={`${translate.getText('Guess')} 🤔`}\n          multiline\n          value={ guessText }\n          onChange={ () => false } />\n        <StyledTextField\n          variant='filled'\n          inputRef={(output) => this.output = output}\n          rows={inputRowsOutput}\n          placeholder='...'\n          InputLabelProps={{\n            shrink: true,\n          }}\n          multiline\n          value={ text }\n          label={`${translate.getText('Output')} 🤮`}\n          onChange={ this.handleOnChange }\n          onFocus={ this.handleOnFocus } />\n      </div>\n    );\n  }\n\n  handleOnChange = (e) => {\n    const { recording, setText } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      setText(e.target.value);\n    }\n  }\n\n  handleOnFocus = (e) => {\n    const { recording } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      e.target.select()\n    }\n  }\n}\n\nexport default inject('view', 'translate', 'speechRecognition')(observer(VoiceOutput));;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MicIcon from '@material-ui/icons/Mic';\nimport StopIcon from '@material-ui/icons/Cancel';\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  container: {\n    position: 'fixed',\n    right: theme.spacing.unit,\n    bottom: theme.spacing.unit\n  },\n});\n\nconst StyledFab = withStyles(styles)(({ classes, ...rest }) => (\n  <Fab\n    className={classes.fab}\n    {...rest}\n  />\n));\n\nconst StyledFabContainer = withStyles(styles)(({ classes, ...rest }) => (\n  <div\n    className={classes.container}\n    {...rest}\n  />\n));\n\nconst VoiceControls = ({ view, speechRecognition, translate, settings }) => {\n  const { recording, clearText, text, screenWidth } = view;\n  const { startRecognition, stopRecognition } = speechRecognition;\n  return (\n    <StyledFabContainer>\n      {recording\n        ? <StyledFab\n          size={screenWidth < 600 ? 'small' : 'large'}\n          color='secondary'\n          onClick={ stopRecognition }><StopIcon /></StyledFab>\n        : <StyledFab\n          size={screenWidth < 600 ? 'small' : 'large'}\n          color='primary'\n          disabled={!settings.isOnline}\n          onClick={ startRecognition }><MicIcon /></StyledFab>\n      }\n      <StyledFab\n        size={screenWidth < 600 ? 'small' : 'large'}\n        disabled={ !text }\n        onClick={ clearText }\n      >\n        <DeleteIcon />\n      </StyledFab>\n    </StyledFabContainer>\n  );\n}\n\nexport default inject('view', 'speechRecognition', 'settings', 'translate')(observer(VoiceControls));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport NotSupported from './NotSupported';\nimport VoiceOutput from './VoiceOutput';\nimport VoiceControls from './VoiceControls';\n\nconst Body = ({ settings }) => {\n  return settings.speechRecognitionSupported\n    ? <><VoiceOutput /><VoiceControls /></>\n    : <NotSupported />\n};\n\nBody.propTypes = {\n  settings: PropTypes.object.isRequired,\n};\n\nexport default inject('settings')(observer(Body));\n","import React from 'react';\nimport DevTools from 'mobx-react-devtools';\n\nimport StoreProvider from './StoreProvider'\nimport Theme from './Theme';\nimport Toolbar from './Toolbar';\nimport Menu from './Menu';\nimport { Wrapper, DrawerSwitcher, Bar, Content } from './Layout';\nimport Body from './Body';\n\nconst App = ({ store }) => (\n  <StoreProvider store={store}>\n    <>\n      <DevTools />\n      <Theme>\n        <Wrapper>\n          <Bar><Toolbar /></Bar>\n          <DrawerSwitcher><Menu /></DrawerSwitcher>\n          <Content>\n            <Body />\n          </Content>\n        </Wrapper>\n      </Theme>\n    </>\n  </StoreProvider>\n);\n\nexport default App;\n","import { decorate, observable, action, computed } from 'mobx';\n\nimport { getScreenWidth, getScreenHeight } from '../utils/browser';\n\nclass ViewStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  // OBSERVABLES................................................................\n  recording = false;\n  text = '';\n  guessText = '';\n  tempDrawerOpen = false;\n  screenWidth = getScreenWidth();\n  screenHeight = getScreenHeight();\n  lightThemeActive = false;\n\n  // COMPUTEDS..................................................................\n  get showTempDrawer() {\n    return this.screenWidth < 960;\n  }\n\n  get inputRowsGuess() {\n    return this.screenWidth < 500\n      ? 2\n      : (this.screenHeight - 180) / 19;\n  }\n\n  get inputRowsOutput() {\n    return this.screenWidth < 500\n      ? (this.screenHeight - 225) / 19\n      : (this.screenHeight - 180) / 19;\n  }\n\n  // ACTIONS....................................................................\n  onScreenResize = () => {\n    this.screenWidth = getScreenWidth();\n    this.screenHeight = getScreenHeight();\n  };\n\n  toggleTempDrawer = () => {\n    this.tempDrawerOpen = !this.tempDrawerOpen;\n  };\n\n  closeTempDrawer = () => {\n    this.tempDrawerOpen = false;\n  };\n\n  toggleLightTheme = () => {\n    this.lightThemeActive = !this.lightThemeActive;\n  };\n\n  setText = (text) => {\n    this.text = text;\n  };\n\n  clearText = () => {\n    this.text = '';\n  };\n\n  addText = (text) => {\n    this.text = this.text + text;\n  };\n\n  setGuessText = (text) => {\n    this.guessText = text || '...';\n  };\n\n  startRecording = () => {\n    this.recording = true;\n  };\n\n  stopRecording = () => {\n    this.recording = false;\n  };\n}\n\ndecorate(ViewStore, {\n  recording: observable,\n  text: observable,\n  guessText: observable,\n  tempDrawerOpen: observable,\n  screenWidth: observable,\n  screenHeight: observable,\n  lightThemeActive: observable,\n  showTempDrawer: computed,\n  inputRowsGuess: computed,\n  inputRowsOutput: computed,\n  onScreenResize: action,\n  toggleTempDrawer: action,\n  closeTempDrawer: action,\n  toggleLightTheme: action,\n  setText: action,\n  clearText: action,\n  setGuessText: action,\n  startRecording: action,\n  stopRecording: action,\n});\n\nexport default ViewStore;\n","import { decorate, observable, action, autorun } from 'mobx';\nimport {\n  getBrowserSpeechRecognition,\n} from '../utils/browser'\n\nclass SpeechRecognitionStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    autorun(() => {\n      if (this.appStore.settings && !this.appStore.settings.isOnline) {\n        this.stopRecognition();\n      }\n    });\n  }\n\n  initRecognition = () => {\n    const BrowserSpeechRecognition = getBrowserSpeechRecognition();\n    this.recognition = new BrowserSpeechRecognition();\n    this.recognition.continuous = true;\n    this.recognition.interimResults = true;\n    this.recognition.lang = this.appStore.settings.language;\n\n    this.recognition.onstart = (event) => {\n      console.log('SpeechRecognition.onstart');\n    }\n\n    this.recognition.onresult = (event) => {\n      console.log('SpeechRecognition.onresult');\n      if (this.appStore.view.recording) {\n        let guess = '';\n        let output = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            output = event.results[i][0].transcript\n          } else {\n            guess = i > 0\n              ? guess + event.results[i][0].transcript\n              : event.results[i][0].transcript;\n          }\n        }\n        this.setOutput(output);\n        this.setGuess(guess);\n      }\n    }\n\n    this.recognition.onspeechend = () => {\n      console.log('SpeechRecognition.onspeechend');\n    }\n\n    this.recognition.onerror = (event) => {\n      console.log('SpeechRecognition.onerror');\n    }\n\n    this.recognition.onaudiostart = (event) => {\n      console.log('SpeechRecognition.onaudiostart');\n    }\n\n    this.recognition.onaudioend = (event) => {\n      console.log('SpeechRecognition.onaudioend');\n    }\n\n    this.recognition.onend = (event) => {\n      console.log('SpeechRecognition.onend');\n      this.stopRecognition();\n    }\n\n    this.recognition.onnomatch = (event) => {\n      console.log('SpeechRecognition.onnomatch');\n    }\n\n    this.recognition.onsoundstart = (event) => {\n      console.log('SpeechRecognition.onsoundstart');\n    }\n\n    this.recognition.onsoundend = (event) => {\n      console.log('SpeechRecognition.onsoundend');\n    }\n\n    this.recognition.onspeechstart = (event) => {\n      console.log('SpeechRecognition.onspeechstart');\n    }\n  }\n\n  // OBSERVABLES................................................................\n  output = '';\n  guess = '';\n  lastGuess = '';\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  startRecognition = () => {\n    if (!this.recognition) {\n      this.initRecognition()\n    }\n    this.output = '';\n    this.guess = '';\n    this.lastGuess = '';\n    this.recognition.start();\n    this.appStore.view.startRecording();\n  }\n\n  stopRecognition = () => {\n    if (this.guess) {\n      this.appStore.view.addText(this.guess + ' ');\n    }\n    this.appStore.view.setGuessText('');\n    this.output = '';\n    this.guess = '';\n    this.appStore.view.stopRecording();\n\n    try {\n      this.recognition.stop()\n    } catch (DOMException) {\n      // ...\n    }\n  }\n\n  setOutput = (output) => {\n    this.output = output;\n    this.guess = '';\n    this.appStore.view.addText(output);\n  }\n\n  setGuess = (guess) => {\n    this.guess = guess;\n    this.appStore.view.setGuessText(this.guess);\n  }\n}\n\ndecorate(SpeechRecognitionStore, {\n  output: observable,\n  guess: observable,\n  startRecognition: action,\n  stopRecognition: action,\n  setOutput: action,\n  setGuess: action,\n});\n\nexport default SpeechRecognitionStore;\n","import { decorate, observable, action } from 'mobx';\nimport createHistory from 'history/createBrowserHistory';\n\nclass RouterStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    this.history = createHistory({\n      basename: process.env.PUBLIC_URL,\n    });\n    this.setPathname(this.history.location.pathname)\n    this.history.listen((location, action) => {\n      this.setPathname(location.pathname);\n      console.log(`The last navigation action was ${action}`)\n    });\n  }\n\n  // OBSERVABLES................................................................\n  pathname = '';\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  goTo = (route = '/') => {\n    this.history.push(route);\n    if (this.appStore.view.showTempDrawer && this.appStore.view.tempDrawerOpen) {\n      this.appStore.view.closeTempDrawer();\n    }\n  };\n\n  setPathname = (pathname) => {\n    this.pathname = pathname;\n  };\n}\n\ndecorate(RouterStore, {\n  pathname: observable,\n  goTo: action,\n  setPathname: action,\n});\n\nexport default RouterStore;\n","import { decorate } from 'mobx';\n\nclass TranslateStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  translations = { // <-- can replace with json later\n    'Voice to text': {\n      'de-DE': 'Stimme zum Text',\n    },\n    'Language': {\n      'de-DE': 'Sprache',\n    },\n    'Online status': {\n      'de-DE': 'Online Status',\n    },\n    'localStorage support': {\n      'de-DE': 'Speicherunterstützung',\n    },\n    'Permissions support': {\n      'de-DE': 'Erlaubnisunterstützung'\n    },\n    'Speech recognition support': {\n      'de-DE': 'Spracherkennungsunterstützung',\n    },\n    'Audio support': {\n      'de-DE': 'Audio-Unterstützung',\n    },\n    'Audio permission': {\n      'de-DE': 'Audio-Erlaubnis',\n    },\n    'Audio source': {\n      'de-DE': 'Audio quelle',\n    },\n    'Default': {\n      'de-DE': 'Standard',\n    },\n    'Unknown': {\n      'de-DE': 'Unbekannte',\n    },\n    'Request': {\n      'de-DE': 'Anfordern',\n    },\n    'Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation': {\n      'de-DE': 'Vermutungen tauchen hier auf... sagen Dinge wie \"neuer Absatz\" oder \"Punkt\" für Interpunktion',\n    },\n    'Guess': {\n      'de-DE': 'Vermutung',\n    },\n    'Output': {\n      'de-DE': 'Ausgang',\n    },\n    'Speech recognition is not supported by your device. Currently only desktop Chrome and android Chrome support this technology.': {\n      'de-DE': 'Die Spracherkennung wird von Ihrem Gerät nicht unterstützt. Derzeit unterstützen nur Desktop Chrome und Android Chrome diese Technologie.'\n    }\n  };\n\n  getText = (key= '') => {\n    if (this.translations[key] && this.translations[key][this.appStore.settings.language]) {\n      return this.translations[key][this.appStore.settings.language];\n    }\n    return key;\n  }\n\n  // OBSERVABLES................................................................\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n\n}\n\ndecorate(TranslateStore, {\n\n});\n\nexport default TranslateStore;\n","import { decorate, observable, action } from 'mobx';\nimport {\n  checkIfOnline,\n  setOnlineListener,\n  localStorageSupported,\n  getLocalStorageByKey,\n  setLocalStorageByKey,\n  speechRecognitionSupported,\n  permissionsSupported,\n  requestAudioPermission,\n  checkAudioPermission,\n  setAudioPermissionListener,\n  audioSupported,\n  getAudioDevices,\n  setAudioDeviceListener,\n} from '../utils/browser'\n\nconst DEFAULT_LANGUAGE = 'de-DE';\n\nclass SettingsStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    setOnlineListener(this.setOnlineStatus);\n\n    this.localStorageSupported = localStorageSupported;\n    this.speechRecognitionSupported = speechRecognitionSupported;\n    this.audioSupported = audioSupported;\n    this.permissionsSupported = permissionsSupported;\n\n    this.requestAudioPermission = () => requestAudioPermission().then(this.setAudioPermission);\n    this.updateAudioPermission = () => checkAudioPermission().then(this.setAudioPermission)\n    this.updateAudioPermission();\n    setAudioPermissionListener(this.updateAudioPermission);\n\n    this.updateAudioDevices = () => getAudioDevices().then(this.setAudioDevices);\n    this.updateAudioDevices();\n    setAudioDeviceListener(this.updateAudioDevices);\n  }\n\n  // OBSERVABLES................................................................\n  isOnline = checkIfOnline();\n  language = getLocalStorageByKey('language') || DEFAULT_LANGUAGE;\n  audioSource = 'default';\n  audioDevices = [];\n  audioPermission = true;\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  setOnlineStatus = (status = false) => {\n    this.isOnline = status;\n  }\n\n  setLanguage = (language = DEFAULT_LANGUAGE) => {\n    setLocalStorageByKey('language', language);\n    this.language = language;\n    if (this.appStore.speechRecognition.recognition) {\n      this.appStore.speechRecognition.recognition.lang = language;\n    }\n  }\n\n  setAudioSource = (deviceId = '') => {\n    this.audioSource = deviceId;\n  }\n\n  setAudioDevices = (devices = []) => {\n    this.audioDevices = devices;\n  }\n\n  setAudioPermission = (permission = false) => {\n    this.audioPermission = permission;\n    this.updateAudioDevices();\n  }\n}\n\ndecorate(SettingsStore, {\n  isOnline: observable,\n  language: observable,\n  audioSource: observable,\n  audioDevices: observable,\n  audioPermission: observable,\n  setOnlineStatus: action,\n  setLanguage: action,\n  setAudioSource: action,\n  setAudioDevices: action,\n  setAudioPermission: action,\n});\n\nexport default SettingsStore;\n","import { configure } from 'mobx';\n\nimport ViewStore from './ViewStore';\nimport SpeechRecognitionStore from './SpeechRecognitionStore';\nimport RouterStore from './RouterStore';\nimport TranslateStore from './TranslateStore';\nimport SettingsStore from './SettingsStore';\n\nconfigure({ enforceActions: 'observed' });\n\nexport default class AppStore {\n  constructor() {\n    this.view = new ViewStore(this);\n    this.speechRecognition = new SpeechRecognitionStore(this);\n    this.router = new RouterStore(this);\n    this.translate = new TranslateStore(this);\n    this.settings = new SettingsStore(this);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport AppStore from './stores/AppStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App store={ new AppStore() }/>,\n  document.getElementById('root')\n);\n\n// enable offline: unregister() to register()\nserviceWorker.register();\n"],"sourceRoot":""}