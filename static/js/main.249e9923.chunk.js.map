{"version":3,"sources":["components/StoreProvider.js","components/Theme/ThemeProvider.js","components/Toolbar/Title.js","components/Toolbar/ToggleDrawerButton.js","components/Toolbar/ToggleLightThemeButton.js","components/Icons/Github.js","utils/browser.js","components/Toolbar/GithubLinkButton.js","components/Toolbar/MicButton.js","components/Toolbar/Toolbar.js","components/Menu/Header.js","utils/language.js","components/Menu/SelectLang.js","components/Menu/_StyledCaption.js","components/Menu/OnlineStatus.js","components/Menu/LocalStorageSupport.js","components/Menu/SpeechRecognitionSupport.js","components/Menu/AudioSupport.js","components/Menu/AudioPermission.js","components/Menu/SelectAudio.js","components/Menu/Settings.js","components/Menu/Menu.js","components/Layout/Wrapper.js","components/Layout/Drawer.js","components/Layout/TempDrawer.js","components/Layout/DrawerSwitcher.js","components/Layout/Bar.js","components/Layout/Content.js","components/Body/NotSupported.js","components/Body/VoiceOutput.js","components/Body/VoiceControls.js","components/Body/Body.js","components/App.js","stores/ViewStore.js","stores/SpeechRecognitionStore.js","stores/RouterStore.js","stores/TranslateStore.js","stores/SettingsStore.js","stores/AppStore.js","serviceWorker.js","index.js"],"names":["StoreProvider","_ref","store","children","react_default","a","createElement","index_module","view","router","translate","settings","speechRecognition","inject","observer","core_styles","theme","createMuiTheme","drawerWidth","typography","useNextVariants","bodyColor","dark","grey","light","palette","primary","teal","type","lightThemeActive","withStyles","title","Object","assign","mixins","gutters","flex","classes","Typography_default","className","variant","color","noWrap","IconButton_default","aria-label","onClick","toggleTempDrawer","Settings_default","toggleLightTheme","LightbulbOutline_default","Github","SvgIcon_default","d","getScreenWidth","window","innerWidth","getScreenHeight","innerHeight","checkIfOnline","navigator","onLine","speechRecognitionSupported","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","localStorageSupported","localStorage","permissionSupported","permissions","getAudioPermission","_getAudioPermission","apply","this","arguments","_callee","permissionStatus","regenerator_default","wrap","_context","prev","next","query","name","sent","abrupt","t0","console","log","stop","requestAudioPermission","_requestAudioPermission","_callee2","mediaStream","tracks","_context2","mediaDevices","getUserMedia","audio","getAudioTracks","length","_callee3","userPromptPermission","_context3","state","_callee4","listener","_args4","_context4","undefined","onchange","audioSupported","_callee5","devices","_context5","enumerateDevices","filter","kind","deviceId","GithubLinkButton","url","open","Icons_Github","MicButton","_this","buttonRef","button","props","stopRecognition","Mic_default","Component","Fragment","showTempDrawer","Toolbar_ToggleDrawerButton","recording","Toolbar_MicButton","Toolbar_Title","Toolbar_ToggleLightThemeButton","Toolbar_GithubLinkButton","wrapper","toolbar","display","drawerHeader","alignItems","overflow","caption","paddingLeft","concat","spacing","unit","paddingTop","h6","cursor","&:hover","secondary","textDecoration","goTo","getText","langs","forEach","lang","l","i","push","tag","supportedLangs","StyledFormControl","formControl","width","marginTop","rest","objectWithoutProperties","FormControl_default","SelectLang","_handleChange","e","setLanguage","target","value","_this$props","InputLabel_default","htmlFor","Select_default","language","onChange","inputProps","id","map","_ref2","MenuItem_default","key","React","StyledCaption","text","OnlineStatus","_StyledCaption","onlineStatus","LocalStorageSupport","SpeechRecognitionSupport","AudioSupport","AudioPermission","audioPermission","Button_default","SelectAudio","setAudioSource","SelectAudio_StyledFormControl","audioSource","audioDevices","device","label","Menu_OnlineStatus","Menu_LocalStorageSupport","Menu_SpeechRecognitionSupport","Menu_SelectLang","Menu_AudioSupport","Menu_AudioPermission","Menu_SelectAudio","Menu","Menu_Header","Divider_default","Menu_Settings","StyledWrapper","flexGrow","zIndex","height","position","react_event_listener_cjs_default","onResize","onScreenResize","drawerPaper","Drawer_default","anchor","paper","StyledMuiDrawer","ModalProps","keepMounted","tempDrawerOpen","onClose","Layout_TempDrawer","Layout_Drawer","appBar","defineProperty","right","left","breakpoints","up","AppBar_default","Toolbar_default","main","backgroundColor","background","default","flexDirection","content","StyledMessage","message","MicOff_default","style","verticalAlign","StyledTextField","textField","TextField_default","InputLabelProps","shrink","VoiceOutput","handleOnChange","_this$props$view","setText","handleOnFocus","select","_this2","_this$props$view2","guessText","inputRows","guess","scrollTop","scrollHeight","output","flexWrap","inputRef","rows","disabled","placeholder","multiline","onFocus","styles","fab","margin","container","bottom","StyledFab","Fab_default","StyledFabContainer","_ref3","clearText","screenWidth","startRecognition","size","Cancel_default","Delete_default","Body_VoiceOutput","Body_VoiceControls","Body_NotSupported","App","components_StoreProvider","mobx_react_devtools_default","Theme_ThemeProvider","Layout_Wrapper","Layout_Bar","components_Toolbar_Toolbar","Layout_DrawerSwitcher","components_Menu_Menu","Layout_Content","components_Body_Body","ViewStore","appStore","classCallCheck","screenHeight","closeTempDrawer","addText","setGuessText","startRecording","stopRecording","decorate","observable","computed","action","SpeechRecognitionStore","initRecognition","BrowserSpeechRecognition","recognition","continuous","interimResults","onstart","event","onresult","resultIndex","results","isFinal","transcript","setOutput","setGuess","onspeechend","onerror","onaudiostart","onaudioend","onend","onnomatch","onsoundstart","onsoundend","onspeechstart","lastGuess","start","DOMException","RouterStore","pathname","route","history","setPathname","createHistory","basename","process","location","listen","TranslateStore","translations","Voice to text","de-DE","Language","Online status","localStorage support","Speech recognition support","Audio support","Audio permission","Audio source","Default","Unknown","Request","Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation","Guess","Output","SettingsStore","getItem","getLocalStorageByKey","setOnlineStatus","status","setItem","setLocalStorageByKey","setAudioDevices","setAudioPermission","permission","updateAudioDevices","wrappedListener","addEventListener","setOnlineListener","then","updateAudioPermission","_checkAudioPermission","checkAudioPermission","_setAudioPermissionListener","setAudioPermissionListener","_getAudioDevices","getAudioDevices","ondevicechange","setAudioDeviceListener","configure","enforceActions","Boolean","hostname","match","ReactDOM","render","components_App","AppStore","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.249e9923.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider as MobxProvider } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n// this component dictates which stores can be injected into app components\nconst StoreProvider = ({ store, children }) => (\n  <MobxProvider\n    view={store.view}\n    router={store.router}\n    translate={store.translate}\n    settings={store.settings}\n    speechRecognition={store.speechRecognition}\n  >\n    {children}\n  </MobxProvider>\n);\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n// import amber from '@material-ui/core/colors/amber';\nimport teal from '@material-ui/core/colors/teal';\nimport grey from '@material-ui/core/colors/grey';\n\nconst ThemeProvider = ({ view, children }) => (\n  <MuiThemeProvider theme={createMuiTheme({\n    drawerWidth: 260,\n    typography: {\n      useNextVariants: true,\n    },\n    bodyColor: {\n      dark: grey['A400'],\n      light: grey[50],\n    },\n    palette: {\n      primary: teal,\n      type: view.lightThemeActive ? 'light' : 'dark',\n    },\n  })}>\n    {children}\n  </MuiThemeProvider>\n);\n\nThemeProvider.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default inject('view')(observer(ThemeProvider));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  title: Object.assign({}, theme.mixins.gutters(), {\n    flex: '1 1 auto',\n  }),\n});\n\nconst Title = ({ classes, title }) => (\n  <Typography\n    className={classes.title}\n    variant='h6'\n    color='inherit'\n    noWrap\n  >\n    {title}\n  </Typography>\n);\n\nTitle.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport { inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst ToggleDrawerButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='open drawer'\n    onClick={() => view.toggleTempDrawer()}\n  >\n    <SettingsIcon />\n  </IconButton>\n);\n\nToggleDrawerButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleDrawerButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LightbulbOutline from '@material-ui/icons/LightbulbOutline';\n\nconst ToggleLightThemeButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='toggle light theme'\n    onClick={() => view.toggleLightTheme()}\n  >\n    <LightbulbOutline />\n  </IconButton>\n);\n\nToggleLightThemeButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleLightThemeButton);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Github = () => (\n  <SvgIcon>\n    <path d='M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3' />\n  </SvgIcon>\n);\n\nexport default Github;\n","export const getScreenWidth = () => {\n  return window.innerWidth;\n};\n\nexport const getScreenHeight = () => {\n  return window.innerHeight;\n};\n\nexport const setBodyColor = (color) => {\n  document.body.style.background = color;\n};\n\nexport const navigateTo = (url) => {\n  window.open(url);\n};\n\nexport const checkIfOnline = () => {\n  return window.navigator.onLine\n}\n\nexport const setOnlineListener = (listener = () => false) => {\n  const wrappedListener = () => listener(checkIfOnline());\n  window.addEventListener('offline', wrappedListener);\n  window.addEventListener('online', wrappedListener);\n}\n\nexport const speechRecognitionSupported = typeof window !== 'undefined' &&\n                                          !!(window.SpeechRecognition ||\n                                             window.webkitSpeechRecognition ||\n                                             window.mozSpeechRecognition ||\n                                             window.msSpeechRecognition ||\n                                             window.oSpeechRecognition);\n\n\nexport const getBrowserSpeechRecognition = () => {\n  if (speechRecognitionSupported) {\n    return window.SpeechRecognition ||\n           window.webkitSpeechRecognition ||\n           window.mozSpeechRecognition ||\n           window.msSpeechRecognition ||\n           window.oSpeechRecognition;\n  } else {\n    return null;\n  }\n}\n\nexport const localStorageSupported = typeof window !== 'undefined' &&\n                                     !!window.localStorage;\n\nexport const getLocalStorageByKey = (key) => {\n  let value;\n  try {\n    value = window.localStorage.getItem(key);\n  } catch (e) {\n    console.log(e)\n    return null;\n  }\n  return value;\n};\n\nexport const setLocalStorageByKey = (key, value) => {\n  try {\n    window.localStorage.setItem(key, value);\n  } catch (e) {\n    console.log(e)\n    return false;\n  }\n  return true;\n}\n\nexport const permissionSupported = typeof window !== 'undefined' &&\n                                   typeof window.navigator !== 'undefined' &&\n                                   !!window.navigator.permissions;\n\nexport async function getAudioPermission() {\n  try {\n    let permissionStatus = await window.navigator.permissions.query({ name: 'microphone' });\n    return permissionStatus;\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n}\n\nexport async function requestAudioPermission() {\n  try {\n    let mediaStream = await window.navigator.mediaDevices.getUserMedia({ audio: true })\n    const tracks = mediaStream.getAudioTracks();\n    if (tracks.length) {\n      tracks[0].stop();\n    }\n    return true;\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nexport async function checkAudioPermission() {\n  if (permissionSupported) {\n    let permissionStatus = await getAudioPermission();\n    return permissionStatus.state === 'granted';\n  } else {\n    let userPromptPermission = await requestAudioPermission();\n    return userPromptPermission;\n  }\n}\n\nexport async function setAudioPermissionListener(listener = () => false) {\n  try {\n    let permissionStatus = await window.navigator.permissions.query({ name: 'microphone' })\n    permissionStatus.onchange = listener;\n    return true\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nexport const audioSupported = typeof window !== 'undefined' &&\n                              typeof window.navigator !== 'undefined' &&\n                              !!window.navigator.mediaDevices;\n\nexport async function getAudioDevices() {\n  try {\n    let devices = await window.navigator.mediaDevices.enumerateDevices();\n    return devices.filter((d) => d.kind === 'audioinput' && d.deviceId !== 'default');\n  } catch (e) {\n    console.log(e);\n    return [];\n  }\n}\n\nexport const setAudioDeviceListener = (listener = () => false) => {\n  try {\n    window.navigator.mediaDevices.ondevicechange = listener\n    return true\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Github from '../Icons/Github';\nimport { navigateTo } from '../../utils/browser'\n\nconst GithubLinkButton = () => (\n  <IconButton\n    color='inherit'\n    aria-label='go to github'\n    onClick={() => navigateTo('https://github.com/heinburger/voice-to-text-stream')}\n  >\n    <Github />\n  </IconButton>\n);\n\nexport default GithubLinkButton;\n","import React, { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Mic from '@material-ui/icons/Mic';\n\nclass MicButton extends Component {\n  componentDidMount() {\n    // console.log(this.button)\n  }\n  render() {\n    return (\n        <IconButton\n          buttonRef={(button) => this.button = button}\n          color='inherit'\n          aria-label='recording'\n          onClick={this.props.speechRecognition.stopRecognition}\n        >\n          <Mic />\n        </IconButton>\n    );\n  }\n}\n\nexport default inject('speechRecognition')(MicButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport Title from './Title';\nimport ToggleDrawerButton from './ToggleDrawerButton';\nimport ToggleLightThemeButton from './ToggleLightThemeButton';\nimport GithubLinkButton from './GithubLinkButton';\nimport MicButton from './MicButton';\n\nconst Toolbar = ({ view, translate }) => (\n  <>\n    {view.showTempDrawer\n      ? <ToggleDrawerButton />\n      : <React.Fragment />}\n    {view.recording && <MicButton />}\n    <Title/>\n    <ToggleLightThemeButton />\n    <GithubLinkButton />\n  </>\n);\n\nToolbar.propTypes = {\n  view: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n};\n\nexport default inject('view', 'translate')(observer(Toolbar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  wrapper: Object.assign({}, theme.mixins.toolbar, {\n    display: 'flex',\n  }),\n  drawerHeader: Object.assign({}, theme.mixins.gutters(), {\n    display: 'flex',\n    alignItems: 'center',\n    overflow: 'hidden',\n  }),\n  caption: {\n    paddingLeft: `${theme.spacing.unit}px`,\n    paddingTop: `${theme.spacing.unit / 2}px`,\n  },\n  h6: {\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.palette.secondary[theme.palette.type],\n      textDecoration: 'underline'\n    }\n  },\n});\n\nconst Header = ({ classes, router, translate }) => (\n  <div className={classes.wrapper}>\n    <div className={classes.drawerHeader}>\n      <Typography\n        variant='h6'\n        className={classes.h6}\n        noWrap\n        onClick={() => router.goTo('/')}\n      >\n        {translate.getText('Voice to text')}\n      </Typography>\n    </div>\n  </div>\n);\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  router: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(inject('router', 'translate')(observer(Header)));\n","const languages = [\n  ['Afrikaans',       ['af-ZA']],\n  ['Bahasa Indonesia',['id-ID']],\n  ['Bahasa Melayu',   ['ms-MY']],\n  ['Català',          ['ca-ES']],\n  ['Čeština',         ['cs-CZ']],\n  ['Deutsch',         ['de-DE']],\n  ['English',         ['en-AU', 'Australia'],\n                      ['en-CA', 'Canada'],\n                      ['en-IN', 'India'],\n                      ['en-NZ', 'New Zealand'],\n                      ['en-ZA', 'South Africa'],\n                      ['en-GB', 'United Kingdom'],\n                      ['en-US', 'United States']],\n  ['Español',         ['es-AR', 'Argentina'],\n                      ['es-BO', 'Bolivia'],\n                      ['es-CL', 'Chile'],\n                      ['es-CO', 'Colombia'],\n                      ['es-CR', 'Costa Rica'],\n                      ['es-EC', 'Ecuador'],\n                      ['es-SV', 'El Salvador'],\n                      ['es-ES', 'España'],\n                      ['es-US', 'Estados Unidos'],\n                      ['es-GT', 'Guatemala'],\n                      ['es-HN', 'Honduras'],\n                      ['es-MX', 'México'],\n                      ['es-NI', 'Nicaragua'],\n                      ['es-PA', 'Panamá'],\n                      ['es-PY', 'Paraguay'],\n                      ['es-PE', 'Perú'],\n                      ['es-PR', 'Puerto Rico'],\n                      ['es-DO', 'República Dominicana'],\n                      ['es-UY', 'Uruguay'],\n                      ['es-VE', 'Venezuela']],\n  ['Euskara',         ['eu-ES']],\n  ['Français',        ['fr-FR']],\n  ['Galego',          ['gl-ES']],\n  ['Hrvatski',        ['hr_HR']],\n  ['IsiZulu',         ['zu-ZA']],\n  ['Íslenska',        ['is-IS']],\n  ['Italiano',        ['it-IT', 'Italia'],\n                      ['it-CH', 'Svizzera']],\n  ['Magyar',          ['hu-HU']],\n  ['Nederlands',      ['nl-NL']],\n  ['Norsk bokmål',    ['nb-NO']],\n  ['Polski',          ['pl-PL']],\n  ['Português',       ['pt-BR', 'Brasil'],\n                      ['pt-PT', 'Portugal']],\n  ['Română',          ['ro-RO']],\n  ['Slovenčina',      ['sk-SK']],\n  ['Suomi',           ['fi-FI']],\n  ['Svenska',         ['sv-SE']],\n  ['Türkçe',          ['tr-TR']],\n  ['български',       ['bg-BG']],\n  ['Pусский',         ['ru-RU']],\n  ['Српски',          ['sr-RS']],\n  ['한국어',            ['ko-KR']],\n  ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\n                      ['cmn-Hans-HK', '普通话 (香港)'],\n                      ['cmn-Hant-TW', '中文 (台灣)'],\n                      ['yue-Hant-HK', '粵語 (香港)']],\n  ['日本語',           ['ja-JP']],\n  ['Lingua latīna',   ['la']]\n];\n\nconst langs = [];\n\nlanguages.forEach((lang) => {\n  lang.forEach((l, i) => {\n    if (i > 0) {\n      langs.push({\n        name: l[1] ? `${lang[0]} (${l[1]})` : lang[0],\n        tag: l[0]\n      })\n    }\n  })\n})\n\nexport const supportedLangs = langs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { supportedLangs } from '../../utils/language'\n\nconst styles = theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: `${theme.spacing.unit}px`,\n  },\n});\n\nconst StyledFormControl = withStyles(styles)(({ classes, ...rest }) => (\n  <FormControl className={classes.formControl} {...rest} />\n));\n\nclass SelectLang extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledFormControl>\n        <InputLabel htmlFor=\"language-simple\">{translate.getText('Language')}</InputLabel>\n        <Select\n          value={settings.language}\n          onChange={this._handleChange}\n          inputProps={{\n            name: 'language',\n            id: 'language-simple',\n          }}\n        >\n          {\n            supportedLangs.map(({name, tag}) => (\n              <MenuItem key={ tag } value={ tag }>{ name }</MenuItem>\n            ))\n          }\n        </Select>\n      </StyledFormControl>\n    );\n  }\n  _handleChange = e => {\n    const { settings } = this.props\n    settings.setLanguage(e.target.value);\n  };\n}\n\nSelectLang.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SelectLang));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  caption: {\n    paddingTop: `${theme.spacing.unit}px`,\n    color: theme.palette.text.secondary,\n  },\n});\n\nconst StyledCaption = withStyles(styles)(({ classes, ...rest }) => (\n  <Typography\n    variant='caption'\n    className={classes.caption}\n    noWrap\n    {...rest}\n  />\n));\n\nexport default StyledCaption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass OnlineStatus extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Online status')}\n        {settings.onlineStatus ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nOnlineStatus.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(OnlineStatus));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport StyledCaption from './_StyledCaption';\n\nclass LocalStorageSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('localStorage support')}\n        {settings.localStorageSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nLocalStorageSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(LocalStorageSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass SpeechRecognitionSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Speech recognition support')}\n        {settings.speechRecognitionSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nSpeechRecognitionSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SpeechRecognitionSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport StyledCaption from './_StyledCaption';\n\nclass AudioSupport extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledCaption>\n        {translate.getText('Audio support')}\n        {settings.audioSupported ? ' 👍' : ' 👎'}\n      </StyledCaption>\n    );\n  }\n}\n\nAudioSupport.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(AudioSupport));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport Button from '@material-ui/core/Button';\n\nimport StyledCaption from './_StyledCaption';\n\nclass AudioPermission extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <div>\n        <StyledCaption>\n          {translate.getText('Audio permission')}\n          {settings.audioPermission ? ' 👍' : ' 👎'}\n        </StyledCaption>\n        {!settings.audioPermission && (\n          <Button variant='contained' onClick={ settings.requestAudioPermission }>\n            {translate.getText('Request')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nAudioPermission.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(AudioPermission));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: `${theme.spacing.unit}px`,\n  },\n});\n\nconst StyledFormControl = withStyles(styles)(({ classes, ...rest }) => (\n  <FormControl className={classes.formControl} {...rest} />\n));\n\nclass SelectAudio extends React.Component {\n  render() {\n    const { settings, translate } = this.props\n    return (\n      <StyledFormControl>\n        <InputLabel htmlFor=\"audio-simple\">{ translate.getText('Audio source') }</InputLabel>\n        <Select\n          value={settings.audioSource}\n          onChange={this._handleChange}\n          inputProps={{\n            name: 'audio',\n            id: 'audio-simple',\n          }}\n        >\n          <MenuItem key='default' value='default'>{ translate.getText('Default') }</MenuItem>\n          {\n            settings.audioDevices.map((device) => (\n              <MenuItem key={ device.deviceId } value={ device.deviceId }>{ device.label || translate.getText('Unknown') }</MenuItem>\n            ))\n          }\n        </Select>\n      </StyledFormControl>\n    );\n  }\n  _handleChange = e => {\n    const { settings } = this.props\n    settings.setAudioSource(e.target.value);\n  };\n}\n\nSelectAudio.propTypes = {\n  settings: PropTypes.object.isRequired,\n  translate: PropTypes.object.isRequired,\n}\n\nexport default inject('settings', 'translate')(observer(SelectAudio));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport SelectLang from './SelectLang';\nimport OnlineStatus from './OnlineStatus';\nimport LocalStorageSupport from './LocalStorageSupport';\nimport SpeechRecognitionSupport from './SpeechRecognitionSupport';\nimport AudioSupport from './AudioSupport';\nimport AudioPermission from './AudioPermission';\nimport SelectAudio from './SelectAudio';\n\nconst styles = theme => ({\n  wrapper: theme.mixins.gutters(),\n});\n\nconst Settings = ({ classes }) => (\n  <div className={classes.wrapper}>\n    <OnlineStatus />\n    <LocalStorageSupport />\n    <SpeechRecognitionSupport />\n    <SelectLang />\n    <AudioSupport />\n    <AudioPermission />\n    <SelectAudio />\n  </div>\n);\n\nSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Settings);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Header from './Header';\nimport Settings from './Settings';\n\nconst Menu = () => (\n  <>\n    <Header />\n    <Divider />\n    <Settings />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventListener from 'react-event-listener';\n\nconst styles = theme => ({\n  wrapper: {\n    flexGrow: 1,\n    zIndex: 1,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n});\n\nconst StyledWrapper = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.wrapper} {...rest} />\n));\n\nconst Wrapper = ({ children, view }) => (\n  <StyledWrapper>\n    {children}\n    <EventListener target='window' onResize={view.onScreenResize} />\n  </StyledWrapper>\n);\n\nWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n    position: 'relative',\n  },\n});\n\nconst Drawer = ({ classes, children }) => (\n  <MuiDrawer\n    variant='permanent'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n  >\n    {children}\n  </MuiDrawer>\n)\n\nDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default withStyles(styles)(Drawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n  },\n});\n\nconst StyledMuiDrawer = withStyles(styles)(({ classes, ...rest }) => (\n  <MuiDrawer\n    variant='temporary'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n    ModalProps={{\n      keepMounted: true, // Better open performance on mobile.\n    }}\n    {...rest}\n  />\n));\n\nconst TempDrawer = ({ view, children }) => (\n  <StyledMuiDrawer\n    open={view.tempDrawerOpen}\n    onClose={view.toggleTempDrawer}\n  >\n    {children}\n  </StyledMuiDrawer>\n)\n\nTempDrawer.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(TempDrawer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport Drawer from './Drawer';\nimport TempDrawer from './TempDrawer';\n\nconst DrawerSwitcher = ({ view, children }) => view.showTempDrawer\n  ? <TempDrawer>{children}</TempDrawer>\n  : <Drawer>{children}</Drawer>;\n\nDrawerSwitcher.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(DrawerSwitcher));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nconst styles = theme => ({\n  appBar: {\n    right: 0,\n    left: 'auto',\n    position: 'absolute',\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.drawerWidth}px)`,\n    },\n  },\n});\n\nconst Bar = ({ classes, children }) => (\n  <MuiAppBar className={classes.appBar}>\n    <MuiToolbar>\n      {children}\n    </MuiToolbar>\n  </MuiAppBar>\n);\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default withStyles(styles)(Bar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  toolbar: Object.assign({}, theme.mixins.toolbar, {\n    flex: '0 0 auto',\n  }),\n  main: {\n    backgroundColor: theme.palette.background.default,\n    flex: '1 1 auto',\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n})\n\nconst Content = ({ classes, children }) => (\n  <main className={classes.main}>\n    <div className={classes.toolbar} />\n    <div className={classes.content}>\n      {children}\n    </div>\n  </main>\n)\n\nContent.propTypes = {\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { observer, inject } from 'mobx-react';\nimport Typography from '@material-ui/core/Typography';\nimport MicOff from '@material-ui/icons/MicOff';\n\nconst styles = theme => ({\n  message: Object.assign({}, theme.mixins.gutters(), {\n    paddingTop: `${theme.spacing.unit}px`,\n    color: theme.palette.text.secondary,\n  }),\n});\n\nconst StyledMessage = withStyles(styles)(({ classes, ...rest }) => (\n  <Typography\n    variant='h5'\n    className={classes.message}\n    {...rest}\n  />\n));\n\nconst NotSupported = ({ translate }) => (\n  <StyledMessage>\n    <MicOff style={{ verticalAlign: 'middle' }}/>\n    {` ${translate.getText('Speech recognition is not supported by your device.')}`}\n  </StyledMessage>\n);\n\nNotSupported.propTypes = {\n  translate: PropTypes.object.isRequired,\n};\n\nexport default inject('translate')(observer(NotSupported));\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  textField: {\n    flex: '1 1 250px',\n  },\n});\n\nconst StyledTextField = withStyles(styles)(({ classes, ...rest }) => (\n  <TextField\n    InputLabelProps={{\n      shrink: true,\n    }}\n    className={classes.textField}\n    {...rest}\n  />\n));\n\nclass VoiceOutput extends Component {\n  render() {\n    const { text, guessText, inputRows } = this.props.view;\n    const { translate } = this.props;\n    if (this.guess) {\n      this.guess.scrollTop = this.guess.scrollHeight;\n    }\n    if (this.output) {\n      this.output.scrollTop = this.output.scrollHeight;\n    }\n    return (\n      <div style={{ flex: '1 0 auto', display: 'flex', flexWrap: 'wrap' }}>\n        <StyledTextField\n          variant='filled'\n          inputRef={(guess) => this.guess = guess}\n          rows={inputRows}\n          disabled\n          placeholder={translate.getText('Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation')}\n          label={translate.getText('Guess')}\n          multiline\n          value={ guessText }\n          onChange={ () => false } />\n        <StyledTextField\n          variant='filled'\n          inputRef={(output) => this.output = output}\n          rows={inputRows}\n          placeholder='...'\n          InputLabelProps={{\n            shrink: true,\n          }}\n          multiline\n          value={ text }\n          label={translate.getText('Output')}\n          onChange={ this.handleOnChange }\n          onFocus={ this.handleOnFocus } />\n      </div>\n    );\n  }\n\n  handleOnChange = (e) => {\n    const { recording, setText } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      setText(e.target.value);\n    }\n  }\n\n  handleOnFocus = (e) => {\n    const { recording } = this.props.view;\n    const { stopRecognition } = this.props.speechRecognition;\n    if (recording) {\n      stopRecognition();\n    } else {\n      e.target.select()\n    }\n  }\n}\n\nexport default inject('view', 'translate', 'speechRecognition')(observer(VoiceOutput));;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MicIcon from '@material-ui/icons/Mic';\nimport StopIcon from '@material-ui/icons/Cancel';\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  container: {\n    position: 'fixed',\n    right: theme.spacing.unit,\n    bottom: theme.spacing.unit\n  },\n});\n\nconst StyledFab = withStyles(styles)(({ classes, ...rest }) => (\n  <Fab\n    className={classes.fab}\n    {...rest}\n  />\n));\n\nconst StyledFabContainer = withStyles(styles)(({ classes, ...rest }) => (\n  <div\n    className={classes.container}\n    {...rest}\n  />\n));\n\nconst VoiceControls = ({ view, speechRecognition, translate }) => {\n  const { recording, clearText, text, screenWidth } = view;\n  const { startRecognition, stopRecognition } = speechRecognition;\n  return (\n    <StyledFabContainer>\n      {recording\n        ? <StyledFab\n          size={screenWidth < 600 ? 'small' : 'large'}\n          color='secondary'\n          onClick={ stopRecognition }><StopIcon /></StyledFab>\n        : <StyledFab\n          size={screenWidth < 600 ? 'small' : 'large'}\n          color='primary'\n          onClick={ startRecognition }><MicIcon /></StyledFab>\n      }\n      <StyledFab\n        size={screenWidth < 600 ? 'small' : 'large'}\n        disabled={ !text }\n        onClick={ clearText }\n      >\n        <DeleteIcon />\n      </StyledFab>\n    </StyledFabContainer>\n  );\n}\n\nexport default inject('view', 'speechRecognition', 'translate')(observer(VoiceControls));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport NotSupported from './NotSupported';\nimport VoiceOutput from './VoiceOutput';\nimport VoiceControls from './VoiceControls';\n\nconst Body = ({ settings }) => {\n  return settings.speechRecognitionSupported\n    ? <><VoiceOutput /><VoiceControls /></>\n    : <NotSupported />\n};\n\nBody.propTypes = {\n  settings: PropTypes.object.isRequired,\n};\n\nexport default inject('settings')(observer(Body));\n","import React from 'react';\nimport DevTools from 'mobx-react-devtools';\n\nimport StoreProvider from './StoreProvider'\nimport Theme from './Theme';\nimport Toolbar from './Toolbar';\nimport Menu from './Menu';\nimport { Wrapper, DrawerSwitcher, Bar, Content } from './Layout';\nimport Body from './Body';\n\nconst App = ({ store }) => (\n  <StoreProvider store={store}>\n    <>\n      <DevTools />\n      <Theme>\n        <Wrapper>\n          <Bar><Toolbar /></Bar>\n          <DrawerSwitcher><Menu /></DrawerSwitcher>\n          <Content>\n            <Body />\n          </Content>\n        </Wrapper>\n      </Theme>\n    </>\n  </StoreProvider>\n);\n\nexport default App;\n","import { decorate, observable, action, computed } from 'mobx';\n\nimport { getScreenWidth, getScreenHeight } from '../utils/browser';\n\nclass ViewStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  // OBSERVABLES................................................................\n  recording = false;\n  text = '';\n  guessText = '';\n  tempDrawerOpen = false;\n  screenWidth = getScreenWidth();\n  screenHeight = getScreenHeight();\n  lightThemeActive = false;\n\n  // COMPUTEDS..................................................................\n  get showTempDrawer() {\n    return this.screenWidth < 960;\n  }\n\n  get inputRows() {\n    // const switch = screenWidth < 464 ? 2.5 : 1;\n    return (this.screenHeight - 130) / 19;\n  }\n\n  // ACTIONS....................................................................\n  onScreenResize = () => {\n    this.screenWidth = getScreenWidth();\n    this.screenHeight = getScreenHeight();\n  };\n\n  toggleTempDrawer = () => {\n    this.tempDrawerOpen = !this.tempDrawerOpen;\n  };\n\n  closeTempDrawer = () => {\n    this.tempDrawerOpen = false;\n  };\n\n  toggleLightTheme = () => {\n    this.lightThemeActive = !this.lightThemeActive;\n  };\n\n  setText = (text) => {\n    this.text = text;\n  };\n\n  clearText = () => {\n    this.text = '';\n  };\n\n  addText = (text) => {\n    this.text = this.text + text;\n  };\n\n  setGuessText = (text) => {\n    this.guessText = text || '...';\n  };\n\n  startRecording = () => {\n    this.recording = true;\n  };\n\n  stopRecording = () => {\n    this.recording = false;\n  };\n}\n\ndecorate(ViewStore, {\n  recording: observable,\n  text: observable,\n  guessText: observable,\n  tempDrawerOpen: observable,\n  screenWidth: observable,\n  screenHeight: observable,\n  lightThemeActive: observable,\n  showTempDrawer: computed,\n  inputRows: computed,\n  onScreenResize: action,\n  toggleTempDrawer: action,\n  closeTempDrawer: action,\n  toggleLightTheme: action,\n  setText: action,\n  clearText: action,\n  setGuessText: action,\n  startRecording: action,\n  stopRecording: action,\n});\n\nexport default ViewStore;\n","import { decorate, observable, action } from 'mobx';\nimport {\n  getBrowserSpeechRecognition,\n} from '../utils/browser'\n\nclass SpeechRecognitionStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  initRecognition = () => {\n    const BrowserSpeechRecognition = getBrowserSpeechRecognition();\n    this.recognition = new BrowserSpeechRecognition();\n    this.recognition.continuous = true;\n    this.recognition.interimResults = true;\n    this.recognition.lang = this.appStore.settings.language;\n\n    this.recognition.onstart = (event) => {\n      console.log('SpeechRecognition.onstart');\n    }\n\n    this.recognition.onresult = (event) => {\n      console.log('SpeechRecognition.onresult');\n      if (this.appStore.view.recording) {\n        let guess = '';\n        let output = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            output = event.results[i][0].transcript\n          } else {\n            guess = i > 0\n              ? guess + event.results[i][0].transcript\n              : event.results[i][0].transcript;\n          }\n        }\n        this.setOutput(output);\n        this.setGuess(guess);\n      }\n    }\n\n    this.recognition.onspeechend = () => {\n      console.log('SpeechRecognition.onspeechend');\n    }\n\n    this.recognition.onerror = (event) => {\n      console.log('SpeechRecognition.onerror');\n    }\n\n    this.recognition.onaudiostart = (event) => {\n      console.log('SpeechRecognition.onaudiostart');\n    }\n\n    this.recognition.onaudioend = (event) => {\n      console.log('SpeechRecognition.onaudioend');\n    }\n\n    this.recognition.onend = (event) => {\n      console.log('SpeechRecognition.onend');\n      this.stopRecognition();\n    }\n\n    this.recognition.onnomatch = (event) => {\n      console.log('SpeechRecognition.onnomatch');\n    }\n\n    this.recognition.onsoundstart = (event) => {\n      console.log('SpeechRecognition.onsoundstart');\n    }\n\n    this.recognition.onsoundend = (event) => {\n      console.log('SpeechRecognition.onsoundend');\n    }\n\n    this.recognition.onspeechstart = (event) => {\n      console.log('SpeechRecognition.onspeechstart');\n    }\n  }\n\n  // OBSERVABLES................................................................\n  output = '';\n  guess = '';\n  lastGuess = '';\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  startRecognition = () => {\n    if (!this.recognition) {\n      this.initRecognition()\n    }\n    this.output = '';\n    this.guess = '';\n    this.lastGuess = '';\n    this.recognition.start();\n    this.appStore.view.startRecording();\n  }\n\n  stopRecognition = () => {\n    if (this.guess) {\n      this.appStore.view.addText(this.guess + ' ');\n    }\n    this.appStore.view.setGuessText('');\n    this.output = '';\n    this.guess = '';\n    this.appStore.view.stopRecording();\n\n    try {\n      this.recognition.stop()\n    } catch (DOMException) {\n      // ...\n    }\n  }\n\n  setOutput = (output) => {\n    this.output = output;\n    this.guess = '';\n    this.appStore.view.addText(output);\n  }\n\n  setGuess = (guess) => {\n    this.guess = guess;\n    this.appStore.view.setGuessText(this.guess);\n  }\n}\n\ndecorate(SpeechRecognitionStore, {\n  output: observable,\n  guess: observable,\n  startRecognition: action,\n  stopRecognition: action,\n  setOutput: action,\n  setGuess: action,\n});\n\nexport default SpeechRecognitionStore;\n","import { decorate, observable, action } from 'mobx';\nimport createHistory from 'history/createBrowserHistory';\n\nclass RouterStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    this.history = createHistory({\n      basename: process.env.PUBLIC_URL,\n    });\n    this.setPathname(this.history.location.pathname)\n    this.history.listen((location, action) => {\n      this.setPathname(location.pathname);\n      console.log(`The last navigation action was ${action}`)\n    });\n  }\n\n  // OBSERVABLES................................................................\n  pathname = '';\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  goTo = (route = '/') => {\n    this.history.push(route);\n    if (this.appStore.view.showTempDrawer && this.appStore.view.tempDrawerOpen) {\n      this.appStore.view.closeTempDrawer();\n    }\n  };\n\n  setPathname = (pathname) => {\n    this.pathname = pathname;\n  };\n}\n\ndecorate(RouterStore, {\n  pathname: observable,\n  goTo: action,\n  setPathname: action,\n});\n\nexport default RouterStore;\n","import { decorate } from 'mobx';\n\nclass TranslateStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  translations = { // <-- can replace with json later\n    'Voice to text': {\n      'de-DE': 'Stimme zum Text',\n    },\n    'Language': {\n      'de-DE': 'Sprache',\n    },\n    'Online status': {\n      'de-DE': 'Online Status',\n    },\n    'localStorage support': {\n      'de-DE': 'Speicherunterstützung',\n    },\n    'Speech recognition support': {\n      'de-DE': 'Spracherkennungsunterstützung',\n    },\n    'Audio support': {\n      'de-DE': 'Audio-Unterstützung',\n    },\n    'Audio permission': {\n      'de-DE': 'Audio-Erlaubnis',\n    },\n    'Audio source': {\n      'de-DE': 'Audio quelle',\n    },\n    'Default': {\n      'de-DE': 'Standard',\n    },\n    'Unknown': {\n      'de-DE': 'Unbekannte',\n    },\n    'Request': {\n      'de-DE': 'Anfordern',\n    },\n    'Guesses show up here... say things like \"new paragraph\" or \"period\" for punctuation': {\n      'de-DE': 'Vermutungen tauchen hier auf... sagen Dinge wie \"neuer Absatz\" oder \"Punkt\" für Interpunktion',\n    },\n    'Guess': {\n      'de-DE': 'Vermutung',\n    },\n    'Output': {\n      'de-DE': 'Ausgang',\n    },\n  };\n\n  getText = (key= '') => {\n    if (this.translations[key] && this.translations[key][this.appStore.settings.language]) {\n      return this.translations[key][this.appStore.settings.language];\n    }\n    return key;\n  }\n\n  // OBSERVABLES................................................................\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n\n}\n\ndecorate(TranslateStore, {\n\n});\n\nexport default TranslateStore;\n","import { decorate, observable, action } from 'mobx';\nimport {\n  checkIfOnline,\n  setOnlineListener,\n  localStorageSupported,\n  getLocalStorageByKey,\n  setLocalStorageByKey,\n  speechRecognitionSupported,\n  permissionSupported,\n  requestAudioPermission,\n  checkAudioPermission,\n  setAudioPermissionListener,\n  audioSupported,\n  getAudioDevices,\n  setAudioDeviceListener,\n} from '../utils/browser'\n\nconst DEFAULT_LANGUAGE = 'de-DE';\n\nclass SettingsStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    setOnlineListener(this.setOnlineStatus);\n\n    this.localStorageSupported = localStorageSupported;\n    this.speechRecognitionSupported = speechRecognitionSupported;\n    this.audioSupported = audioSupported;\n    this.permissionSupported = permissionSupported;\n\n    this.requestAudioPermission = () => requestAudioPermission().then(this.setAudioPermission);\n    this.updateAudioPermission = () => checkAudioPermission().then(this.setAudioPermission)\n    this.updateAudioPermission();\n    setAudioPermissionListener(this.updateAudioPermission);\n\n    this.updateAudioDevices = () => getAudioDevices().then(this.setAudioDevices);\n    this.updateAudioDevices();\n    setAudioDeviceListener(this.updateAudioDevices);\n  }\n\n  // OBSERVABLES................................................................\n  onlineStatus = checkIfOnline();\n  language = getLocalStorageByKey('language') || DEFAULT_LANGUAGE;\n  audioSource = 'default';\n  audioDevices = [];\n  audioPermission = true;\n\n  // COMPUTEDS..................................................................\n\n  // ACTIONS....................................................................\n  setOnlineStatus = (status = false) => {\n    this.onlineStatus = status;\n  }\n\n  setLanguage = (language = DEFAULT_LANGUAGE) => {\n    setLocalStorageByKey('language', language);\n    this.language = language;\n    if (this.appStore.speechRecognition.recognition) {\n      this.appStore.speechRecognition.recognition.lang = language;\n    }\n  }\n\n  setAudioSource = (deviceId = '') => {\n    this.audioSource = deviceId;\n  }\n\n  setAudioDevices = (devices = []) => {\n    this.audioDevices = devices;\n  }\n\n  setAudioPermission = (permission = false) => {\n    this.audioPermission = permission;\n    this.updateAudioDevices();\n  }\n}\n\ndecorate(SettingsStore, {\n  onlineStatus: observable,\n  language: observable,\n  audioSource: observable,\n  audioDevices: observable,\n  audioPermission: observable,\n  setOnlineStatus: action,\n  setLanguage: action,\n  setAudioSource: action,\n  setAudioDevices: action,\n  setAudioPermission: action,\n});\n\nexport default SettingsStore;\n","import { configure } from 'mobx';\n\nimport ViewStore from './ViewStore';\nimport SpeechRecognitionStore from './SpeechRecognitionStore';\nimport RouterStore from './RouterStore';\nimport TranslateStore from './TranslateStore';\nimport SettingsStore from './SettingsStore';\n\nconfigure({ enforceActions: 'observed' });\n\nexport default class AppStore {\n  constructor() {\n    this.view = new ViewStore(this);\n    this.speechRecognition = new SpeechRecognitionStore(this);\n    this.router = new RouterStore(this);\n    this.translate = new TranslateStore(this);\n    this.settings = new SettingsStore(this);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport AppStore from './stores/AppStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App store={ new AppStore() }/>,\n  document.getElementById('root')\n);\n\n// enable offline: unregister() to register()\nserviceWorker.unregister();\n"],"sourceRoot":""}